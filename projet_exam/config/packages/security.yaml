
security:
    password_hashers:
        App\Entity\User:
            algorithm: auto
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login_check

                username_path: email
                password_path: password



        main:
            lazy: true
            provider: app_user_provider
            custom_authenticators:
                - App\Security\AppCustomAuthenticator

            logout:
                path: app_logout
                target: /

    access_control:
        - { path: ^/api/countries, roles: ROLE_ADMIN, methods: ['POST', 'PUT', 'PATCH', 'DELETE'] }
        - { path: ^/api/categories, roles: ROLE_ADMIN, methods: ['POST', 'PUT', 'PATCH', 'DELETE'] }
        - { path: ^/api/games, roles: ROLE_ADMIN, methods: ['POST', 'PUT', 'PATCH', 'DELETE'] }
        - { path: ^/api/publishers, roles: ROLE_ADMIN, methods: ['POST', 'PUT', 'PATCH', 'DELETE'] }
        - { path: ^/api/me, roles: ROLE_USER }
        - { path: ^/api/reviews, roles: ROLE_USER, methods: ['POST', 'PUT', 'PATCH'] }
        - { path: ^/api/user_own_games, roles: ROLE_USER, methods: ['POST', 'PUT', 'PATCH'] }
        - { path: ^/api/login_check, roles: PUBLIC_ACCESS }
        - { path: ^/api/docs, roles: PUBLIC_ACCESS }
        - { path: ^/api, roles: PUBLIC_ACCESS }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
